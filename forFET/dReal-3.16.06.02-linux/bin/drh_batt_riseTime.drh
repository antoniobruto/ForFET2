// Hyst v1.17
// Hybrid Automaton in dReach
// Converted from file: work/featureModel_batt_riseTime.xml
// Command Line arguments: -dreach work/featureModel_batt_riseTime.xml work/featureModel_batt_riseTime.cfg -o work/drh_batt_riseTime.drh


//Vars
[0, 15000.0] time;
[-1000,1000] v;
[-1000,1000] i;
[-1000,1000] level;
[-1000,1000] t1;
[-1000,1000] t2;
[-1000,1000] clock_time;
[-1000,1000] localTime;
[-1000,1000] riseTime;



// start modes
// off
{
  mode 1;
  invt:
    (and (i = 0.0) (and (v <= 4.2) (and (0.0 <= v) (clock_time <= 15000.0))));
  flow:
    d/dt[v] = --0.0001;
    d/dt[i] = 0.0;
    d/dt[level] = 0.0;
    d/dt[t1] = 0.0;
    d/dt[t2] = 0.0;
    d/dt[clock_time] = 1.0;
    d/dt[localTime] = 1.0;
    d/dt[riseTime] = 0.0;

  jump:
    // off -> precharge (1 -> 2)
      (and true (level = 0.0)) ==> @2(and (i' = 0.05) (v' = v) (level' = level) (t1' = t1) (t2' = t2) (clock_time' = clock_time) (localTime' = localTime) (riseTime' = riseTime));

    // off -> precharge (1 -> 2)
      (and true (level = 1.0)) ==> @2(and (i' = 0.05) (v' = v) (level' = level) (t1' = t1) (t2' = t2) (clock_time' = clock_time) (localTime' = localTime) (riseTime' = riseTime));

  // end off
}

// precharge
{
  mode 2;
  invt:
    (and (i = 0.05) (and (v <= 3.0) (and (0.0 <= v) (clock_time <= 15000.0))));
  flow:
    d/dt[v] = (3.0 + 0.005 - v) / 1200.0;
    d/dt[i] = 0.0;
    d/dt[level] = 0.0;
    d/dt[t1] = 0.0;
    d/dt[t2] = 0.0;
    d/dt[clock_time] = 1.0;
    d/dt[localTime] = 1.0;
    d/dt[riseTime] = 0.0;

  jump:
    // precharge -> constantCurrent (2 -> 3)
      (and (v <= 3.0) (and (v >= 3.0 - 0.005) (level = 0.0))) ==> @3(and (i' = 1.0) (v' = v) (level' = level) (t1' = t1) (t2' = t2) (clock_time' = clock_time) (localTime' = localTime) (riseTime' = riseTime));

    // precharge -> prechargeS0D1R1 (2 -> 7)
      (and (v = 0.1 * 4.2) (and ((3.0 + 0.005 - v) / 1200.0 > 0.0) (level = 0.0))) ==> @7(and (clock_time' = 0.0) (v' = v) (i' = i) (level' = level) (t1' = t1) (t2' = t2) (localTime' = localTime) (riseTime' = riseTime));

    // precharge -> constantCurrent (2 -> 3)
      (and (v <= 3.0) (and (v >= 3.0 - 0.005) (level = 1.0))) ==> @3(and (i' = 1.0) (v' = v) (level' = level) (t1' = t1) (t2' = t2) (clock_time' = clock_time) (localTime' = localTime) (riseTime' = riseTime));

  // end precharge
}

// constantCurrent
{
  mode 3;
  invt:
    (and (i <= 1.0) (and (0.0 <= i) (and (v <= 4.2) (and (3.0 - 0.005 <= v) (clock_time <= 15000.0)))));
  flow:
    d/dt[v] = (4.2 + 0.005 - v) / 150.0;
    d/dt[i] = 0.0;
    d/dt[level] = 0.0;
    d/dt[t1] = 0.0;
    d/dt[t2] = 0.0;
    d/dt[clock_time] = 1.0;
    d/dt[localTime] = 1.0;
    d/dt[riseTime] = 0.0;

  jump:
    // constantCurrent -> constantVoltage (3 -> 4)
      (and (v <= 4.2 + 0.005) (and (4.2 - 0.005 <= v) (level = 0.0))) ==> @4(and (v' = v) (i' = i) (level' = level) (t1' = t1) (t2' = t2) (clock_time' = clock_time) (localTime' = localTime) (riseTime' = riseTime));

    // constantCurrent -> constantCurrentS1D1R1 (3 -> 8)
      (and (0.0 <= localTime) (and (v = 0.9 * 4.2) (and ((4.2 + 0.005 - v) / 150.0 > 0.0) (level = 1.0)))) ==> @8(and (t2' = clock_time) (v' = v) (i' = i) (level' = level) (t1' = t1) (clock_time' = clock_time) (localTime' = localTime) (riseTime' = riseTime));

    // constantCurrent -> constantVoltage (3 -> 4)
      (and (v <= 4.2 + 0.005) (and (4.2 - 0.005 <= v) (level = 1.0))) ==> @4(and (v' = v) (i' = i) (level' = level) (t1' = t1) (t2' = t2) (clock_time' = clock_time) (localTime' = localTime) (riseTime' = riseTime));

  // end constantCurrent
}

// constantVoltage
{
  mode 4;
  invt:
    (and (i <= 1.0) (and (0.025 - 0.005 <= i) (and (v <= 4.2 + 0.005) (and (4.2 - 0.005 <= v) (clock_time <= 15000.0)))));
  flow:
    d/dt[v] = 0.0;
    d/dt[i] = -i / 150.0;
    d/dt[level] = 0.0;
    d/dt[t1] = 0.0;
    d/dt[t2] = 0.0;
    d/dt[clock_time] = 1.0;
    d/dt[localTime] = 1.0;
    d/dt[riseTime] = 0.0;

  jump:
    // constantVoltage -> maintenance (4 -> 5)
      (and (i <= 0.025) (level = 0.0)) ==> @5(and (v' = v) (i' = i) (level' = level) (t1' = t1) (t2' = t2) (clock_time' = clock_time) (localTime' = localTime) (riseTime' = riseTime));

    // constantVoltage -> maintenance (4 -> 5)
      (and (i <= 0.025) (level = 1.0)) ==> @5(and (v' = v) (i' = i) (level' = level) (t1' = t1) (t2' = t2) (clock_time' = clock_time) (localTime' = localTime) (riseTime' = riseTime));

  // end constantVoltage
}

// maintenance
{
  mode 5;
  invt:
    (and (i <= 1.0) (and (0.0 <= i) (and (v <= 4.2) (and (4.0 <= v) (clock_time <= 15000.0)))));
  flow:
    d/dt[v] = -v / 1200.0;
    d/dt[i] = 0.0;
    d/dt[level] = 0.0;
    d/dt[t1] = 0.0;
    d/dt[t2] = 0.0;
    d/dt[clock_time] = 1.0;
    d/dt[localTime] = 1.0;
    d/dt[riseTime] = 0.0;

  jump:
    // maintenance -> constantCurrent (5 -> 3)
      (and (v <= 4.0 + 0.005) (level = 0.0)) ==> @3(and (i' = 1.0) (v' = v) (level' = level) (t1' = t1) (t2' = t2) (clock_time' = clock_time) (localTime' = localTime) (riseTime' = riseTime));

    // maintenance -> constantCurrent (5 -> 3)
      (and (v <= 4.0 + 0.005) (level = 1.0)) ==> @3(and (i' = 1.0) (v' = v) (level' = level) (t1' = t1) (t2' = t2) (clock_time' = clock_time) (localTime' = localTime) (riseTime' = riseTime));

  // end maintenance
}

// FINAL
{
  mode 6;
  invt:
    (and true (clock_time <= 1.0));
  flow:
    d/dt[v] = 0.0;
    d/dt[i] = 0.0;
    d/dt[level] = 0.0;
    d/dt[t1] = 0.0;
    d/dt[t2] = 0.0;
    d/dt[clock_time] = 1.0;
    d/dt[localTime] = 0.0;
    d/dt[riseTime] = 0.0;

  jump:

  // end FINAL
}

// prechargeS0D1R1
{
  mode 7;
  invt:
    (and (i = 0.05) (and (v <= 3.0) (and (0.0 <= v) (clock_time <= 15000.0))));
  flow:
    d/dt[v] = 0.0;
    d/dt[i] = 0.0;
    d/dt[level] = 0.0;
    d/dt[t1] = 0.0;
    d/dt[t2] = 0.0;
    d/dt[clock_time] = 0.0;
    d/dt[localTime] = 0.0;
    d/dt[riseTime] = 0.0;

  jump:
    // prechargeS0D1R1 -> precharge (7 -> 2)
      (and (v = 0.1 * 4.2) (and ((3.0 + 0.005 - v) / 1200.0 > 0.0) (level = 0.0))) ==> @2(and (localTime' = 0.0) (level' = 1.0) (t1' = clock_time) (v' = v) (i' = i) (t2' = t2) (clock_time' = clock_time) (riseTime' = riseTime));

  // end prechargeS0D1R1
}

// constantCurrentS1D1R1
{
  mode 8;
  invt:
    (and (i <= 1.0) (and (0.0 <= i) (and (v <= 4.2) (and (3.0 - 0.005 <= v) (clock_time <= 15000.0)))));
  flow:
    d/dt[v] = 0.0;
    d/dt[i] = 0.0;
    d/dt[level] = 0.0;
    d/dt[t1] = 0.0;
    d/dt[t2] = 0.0;
    d/dt[clock_time] = 0.0;
    d/dt[localTime] = 0.0;
    d/dt[riseTime] = 0.0;

  jump:
    // constantCurrentS1D1R1 -> FINAL (8 -> 6)
      (and (0.0 <= localTime) (and (v = 0.9 * 4.2) (and ((4.2 + 0.005 - v) / 150.0 > 0.0) (level = 1.0)))) ==> @6(and (localTime' = 0.0) (level' = 0.0) (clock_time' = 0.0) (riseTime' = t2 - t1) (v' = v) (i' = i) (t1' = t1) (t2' = t2));

  // end constantCurrentS1D1R1
}
// end modes

init:
@1 (and (and (and (and (and (and (and (v = 0.0) (i = 0.0)) (level = 0.0)) (t1 = 0.0)) (t2 = 0.0)) (clock_time = 0.0)) (localTime = 0.0)) (riseTime = 0.0));

goal:
@1 (and (and (and (and (and (and (and (v = 0.0) (i = 0.0)) (level = 0.0)) (t1 = 0.0)) (t2 = 0.0)) (clock_time = 0.0)) (localTime = 0.0)) (riseTime = 0.0));
